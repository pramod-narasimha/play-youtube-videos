{"version":3,"sources":["serviceWorker.js","actions/PlaySongsActions.js","Components/PlaySongs/YoutubeComponent/YoutubeComponent.js","Components/PlaySongs/PlaylistLinks/PlaylistLinks.js","Components/PlaySongs/AddLinkComponent/AddLinkComponent.js","Components/PlaySongs/PlaySongs.js","reducers/PlaySongsReducer.js","reducers/rootReducer.js","stores/store.js","index.js"],"names":["Boolean","window","location","hostname","match","setLinkData","data","type","payload","setCurrentPlayingSong","removeFromList","linkData","deleteKey","dispatch","tempData","filter","eachObject","key","playThisSong","playKey","YoutubeComponent","_onEnd","currentIndex","currentPlayingId","props","i","length","YouTube","videoId","this","opts","height","width","playerVars","autoplay","onReady","_onReady","onEnd","event","target","pauseVideo","React","Component","connect","statef","songsData","TreeNode","Tree","PlaylistLinks","removeFromPlayList","removingKey","stopPropagation","onDrop","info","dragObj","ar","dropKey","node","eventKey","dragKey","dragNode","dropPos","pos","split","dropPosition","Number","loop","callback","forEach","item","index","arr","children","splice","expanded","unshift","alterLinks","className","draggable","blockNode","onDragEnter","map","title","onClick","style","float","links","AddLinkForm","state","help","validateStatus","inputText","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","values","setState","youtubeId","youtube_parser","youtubeLink","filteredData","eachObj","appendLink","songIndex","setTimeout","resetFields","console","log","resetValidations","url","getFieldDecorator","textAlign","onSubmit","hideRequiredMark","Item","label","hasFeedback","colon","rules","required","message","placeholder","onChange","htmlType","AddLinkComponent","Form","create","name","link","tempIndex","push","PlaySongs","defaultState","PlaySongsReducer","action","updateState","update","Object","assign","resetState","rootReducer","combineReducers","withReduxStateSync","axios","defaults","withCredentials","middlewares","createStateSyncMiddleware","blacklist","thunk","withExtraArgument","middleware","applyMiddleware","store","createStore","composeWithDevTools","initStateWithPrevTab","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4RAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oEClBC,SAASC,EAAYC,GACxB,MAAO,CACHC,KAAM,gBACNC,QAASF,GAIV,SAASG,EAAsBH,GAClC,MAAO,CACHC,KAAM,mBACNC,QAASF,GAWV,IAeMI,EAAiB,SAACC,EAASC,GAAV,OAAwB,SAAAC,GAClD,IAAIC,EAAWH,EAGfE,EAASR,EADTS,EAAWA,EAASC,QAAO,SAAAC,GAAU,OAAIA,EAAWC,MAAQL,SAInDM,EAAe,SAAAC,GAAO,OAAI,SAAAN,GACnCA,EAASJ,EAAsBU,MCvC7BC,E,2MAqBJC,OAAS,WAGP,IAFA,IAAIC,EAAe,EACfC,EAAmB,EAAKC,MAAMD,iBACzBE,EAAI,EAAGA,EAAI,EAAKD,MAAMb,SAASe,OAAQD,IAC9C,GAAI,EAAKD,MAAMb,SAASc,GAAGR,MAAQ,EAAKO,MAAMD,iBAAkB,CAC9DD,EAAeG,EACf,MAGAH,IAAiB,EAAKE,MAAMb,SAASe,OAAS,EAChD,EAAKF,MAAMN,aAAa,EAAKM,MAAMb,SAAS,GAAGM,KAE/C,EAAKO,MAAMN,aAAa,EAAKM,MAAMb,SAASW,EAAe,GAAGL,KAEhE,EAAKO,MAAMd,eAAX,YAA8B,EAAKc,MAAMb,UAAUY,I,wEAxBnD,OACE,kBAACI,EAAA,EAAD,CACEC,QAASC,KAAKL,MAAMD,iBACpBO,KAZS,CACXC,OAAQ,MACRC,MAAO,MACPC,WAAY,CAEVC,SAAU,IAQVC,QAASN,KAAKO,SACdC,MAAOR,KAAKR,W,+BAsBTiB,GAEPA,EAAMC,OAAOC,iB,GAxCcC,IAAMC,WAwDtBC,eAZS,SAAAC,GACtB,MAAO,CACLrB,iBAAkBqB,EAAOC,UAAUtB,iBACnCZ,SAAUiC,EAAOC,UAAUlC,aAIJ,SAAAE,GAAQ,MAAK,CACpCK,aAAc,SAACC,GAAD,OAAaN,EAASK,EAAaC,KACjDT,eAAgB,SAACC,EAASC,GAAV,OAAwBC,EAASH,EAAeC,EAASC,QAG9D+B,CAA6CvB,G,gBClDpD0B,G,OAAaC,IAAbD,UAEFE,E,2MACJC,mBAAqB,SAACX,EAAMY,GAExB,GADFZ,EAAMa,kBACD,EAAK3B,MAAMD,mBAAqB2B,EACjC,EAAK1B,MAAMd,eAAX,YAA8B,EAAKc,MAAMb,UAAUuC,OAChD,CAGH,IAFA,IAAI5B,EAAe,EACfC,EAAmB,EAAKC,MAAMD,iBACzBE,EAAI,EAAGA,EAAI,EAAKD,MAAMb,SAASe,OAAQD,IAC9C,GAAI,EAAKD,MAAMb,SAASc,GAAGR,MAAQ,EAAKO,MAAMD,iBAAkB,CAC9DD,EAAeG,EACf,MAGAH,IAAiB,EAAKE,MAAMb,SAASe,OAAS,EAChD,EAAKF,MAAMN,aAAa,EAAKM,MAAMb,SAAS,GAAGM,KAE/C,EAAKO,MAAMN,aAAa,EAAKM,MAAMb,SAASW,EAAe,GAAGL,KAEhE,EAAKO,MAAMd,eAAX,YAA8B,EAAKc,MAAMb,UAAUY,K,EAIzD6B,OAAS,SAAAC,GACP,IAmBIC,EAiBEC,EACA9B,EArCA+B,EAAUH,EAAKI,KAAKjC,MAAMkC,SAC1BC,EAAUN,EAAKO,SAASpC,MAAMkC,SAC9BG,EAAUR,EAAKI,KAAKjC,MAAMsC,IAAIC,MAAM,KACpCC,EACJX,EAAKW,aAAeC,OAAOJ,EAAQA,EAAQnC,OAAS,IAEhDwC,EAAO,SAAPA,EAAQ5D,EAAMW,EAAKkD,GACvB7D,EAAK8D,SAAQ,SAACC,EAAMC,EAAOC,GACzB,OAAIF,EAAKpD,MAAQA,EACRkD,EAASE,EAAMC,EAAOC,GAE3BF,EAAKG,SACAN,EAAKG,EAAKG,SAAUvD,EAAKkD,QADlC,MAKE7D,EAAI,YAAO,EAAKkB,MAAMb,WAI5BuD,EAAK5D,EAAMqD,GAAS,SAACU,EAAMC,EAAOC,GAChCA,EAAIE,OAAOH,EAAO,GAClBhB,EAAUe,MAIThB,EAAKI,KAAKjC,MAAMgD,UAAY,IAAI9C,OAAS,GAC1C2B,EAAKI,KAAKjC,MAAMkD,UACC,IAAjBV,GAEAE,EAAK5D,EAAMkD,GAAS,SAAAa,GAClBA,EAAKG,SAAWH,EAAKG,UAAY,GAEjCH,EAAKG,SAASG,QAAQrB,OAKxBY,EAAK5D,EAAMkD,GAAS,SAACa,EAAMC,EAAOC,GAChChB,EAAKgB,EACL9C,EAAI6C,MAEgB,IAAlBN,EACFT,EAAGkB,OAAOhD,EAAG,EAAG6B,GAEhBC,EAAGkB,OAAOhD,EAAI,EAAG,EAAG6B,IAIxB,EAAK9B,MAAMoD,WAAWtE,I,wEAGd,IAAD,OAuBP,OACE,6BACE,kBAAC,IAAD,CACEuE,UAAU,iBACVC,WAAS,EACTC,WAAS,EACTC,YAAanD,KAAKmD,YAClB5B,OAAQvB,KAAKuB,QAEPvB,KAAKL,MAAMb,SA9BhBsE,KAAI,SAAAZ,GACP,OACE,kBAACvB,EAAD,CACE7B,IAAKoD,EAAKpD,IACViE,MACE,uBACEC,QAAS,kBAAM,EAAK3D,MAAMN,aAAamD,EAAKpD,MAC5CmE,MAAO,CAAEpD,MAAO,UAEfqC,EAAKa,MACN,0BAAME,MAAO,CAAEC,MAAO,UACpB,kBAAC,IAAD,CACE9E,KAAK,eACL4E,QAAS,SAAC7C,GAAD,OAAW,EAAKW,mBAAmBX,EAAM+B,EAAKpD,qB,GA3F/CwB,IAAMC,WAgInBC,eAbS,SAAAC,GACtB,MAAO,CACLjC,SAAUiC,EAAOC,UAAUlC,SAC3BY,iBAAkBqB,EAAOC,UAAUtB,qBAIZ,SAAAV,GAAQ,MAAK,CACtCK,aAAc,SAAAC,GAAO,OAAIN,EAASK,EAAaC,KAC/CT,eAAgB,SAACC,EAAUC,GAAX,OACdC,EAASH,EAAeC,EAAUC,KACpCgE,WAAY,SAAAU,GAAK,OAAIzE,EFtHG,SAAAyE,GAAK,OAAI,SAAAzE,GAC/BA,EAASR,EAAYiF,KEqHOV,CAAWU,QAE5B3C,CAA6CK,G,oCCxItDuC,E,2MACJC,MAAQ,CACNC,KAAM,GACNC,eAAgB,GAChBC,UAAW,I,EAGbC,aAAe,SAAAC,GACbA,EAAEC,iBACF,EAAKtE,MAAMuE,KAAKC,yBAAwB,SAACC,EAAKC,GAC5C,GAAKD,EAsCH,EAAKE,SAAS,CACZV,KAAM,kCACNC,eAAgB,cAxCV,CACR,IAAIU,EAAY,EAAKC,eAAeH,EAAOI,aAC3C,GAAIF,EACF,GAAI,EAAK5E,MAAMb,UAAY,EAAKa,MAAMb,SAASe,OAAS,EAAG,CACzD,IAAI6E,EAAe,EAAK/E,MAAMb,SAASI,QACrC,SAAAyF,GAAO,OAAIA,EAAQvF,MAAQmF,KAEzBG,GAAgBA,EAAa7E,OAAS,EACxC,EAAKyE,SAAS,CACZV,KAAM,gCACNC,eAAgB,WAGlB,EAAKlE,MAAMiF,WAAWL,EAAtB,YAAqC,EAAK5E,MAAMb,UAAW,EAAKa,MAAMkF,WACtE,EAAKP,SAAS,CACZT,eAAgB,YAElBiB,YAAW,WACT,EAAKnF,MAAMuE,KAAKa,gBACf,WAGL,EAAKpF,MAAMiF,WAAWL,EAAtB,YAAqC,EAAK5E,MAAMb,UAAW,EAAKa,MAAMkF,WACtE,EAAKP,SAAS,CACZT,eAAgB,YAElBiB,YAAW,WACT,EAAKnF,MAAMuE,KAAKa,gBACf,UAGL,EAAKT,SAAS,CACZV,KAAM,oBACNC,eAAgB,UAGpBmB,QAAQC,IAAI,EAAKT,eAAeH,EAAOI,cAOzCK,YAAW,WACT,EAAKI,qBACJ,S,EAIPA,iBAAmB,WACjB,EAAKZ,SAAS,CACZV,KAAM,GACNC,eAAgB,M,EAIpBW,eAAiB,SAAAW,GACf,IACI5G,EAAQ4G,EAAI5G,MADH,6EAEb,SAAOA,GAA6B,KAApBA,EAAM,GAAGsB,SAAgBtB,EAAM,I,wEAGvC,IAAD,OACC6G,EAAsBpF,KAAKL,MAAMuE,KAAjCkB,kBAER,OACE,yBAAK7B,MAAO,CAAE8B,UAAW,WACvB,kBAAC,IAAD,CAAMC,SAAUtF,KAAK+D,aAAcwB,kBAAkB,GACnD,kBAAC,IAAKC,KAAN,CACEC,MAAM,mBACN5B,eAAgB7D,KAAK2D,MAAME,eAC3B6B,aAAW,EACX9B,KAAM5D,KAAK2D,MAAMC,KACjB+B,OAAO,GAENP,EAAkB,cAAe,CAChCQ,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,MADpCV,CAGC,kBAAC,IAAD,CACEW,YAAY,sCACZC,SAAU,kBAAM,EAAKd,wBAI3B,kBAAC,IAAKM,KAAN,KACE,kBAAC,IAAD,CAAQ9G,KAAK,UAAUuH,SAAS,UAAhC,c,GA/FcrF,IAAMC,WAyG1BqF,EAAmBC,IAAKC,OAAO,CAAEC,KAAM,YAApBF,CAAkCzC,GAa5C5C,eAXS,SAAAC,GACpB,MAAO,CACL8D,UAAW9D,EAAOC,UAAU6D,UAC5B/F,SAAUiC,EAAOC,UAAUlC,aAIJ,SAAAE,GAAQ,MAAK,CACtC4F,WAAY,SAAC0B,EAAMxH,EAAU+F,GAAjB,OAA+B7F,EH/FrB,SAACsH,EAAKxH,EAAS+F,GAAf,OAA6B,SAAA7F,GACnD,IAAIC,EAAWH,EACXyH,EAAY1B,EAAY,EACJ,IAApB5F,EAASY,QACTb,EAASJ,EAAsB0H,IAEnCrH,EAASuH,KAAK,CAAEnD,MAAO,QAAUkD,EAAWnH,IAAKkH,IACjDtH,EAASR,EAAYS,IACrBD,EAlBM,CACFN,KAAM,iBACNC,QAgBkB4H,KGuF8B3B,CAAW0B,EAAMxH,EAAU+F,QAGpE/D,CAA6CoF,GCnHtDO,E,iLAEF,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKzD,UAAU,YACZhD,KAAKL,MAAMb,SAASe,OAAS,EAAI,kBAAC,EAAD,MAAuB,GACzD,kBAAC,EAAD,Y,GAPce,IAAMC,WAoBfC,eANS,SAAAC,GACtB,MAAO,CACLjC,SAAUiC,EAAOC,UAAUlC,YAIS,KAAzBgC,CAA+B2F,G,kCC5BxCC,EAAe,CACjB5H,SAAU,GACVY,iBAAkB,GAClBmF,UAAW,GA0BE8B,EAvBU,WAAwC,IAA/BhD,EAA8B,uDAAtB+C,EAAcE,EAAQ,uCACtDlI,EAAkBkI,EAAlBlI,KAAMC,EAAYiI,EAAZjI,QAERkI,EAAc,SAAAC,GAClB,OAAOC,OAAOC,OAAO,GAAIrD,EAAOmD,IAG5BG,EAAa,WACjB,OAAOF,OAAOC,OAAO,GAAIrD,EAAO+C,IAElC,OAAQhI,GACN,IAAK,gBACH,OAAOmI,EAAY,CAAE/H,SAAUH,IACjC,IAAK,mBACH,OAAOkI,EAAY,CAAEnH,iBAAkBf,IACzC,IAAK,iBACH,OAAOkI,EAAY,CAAEhC,UAAWlG,IAClC,IAAK,aACH,OAAOsI,IACT,QACE,OAAOtD,ICtBTuD,EAAcC,0BAAgB,CAClCnG,UAAW2F,IAGES,+BAAmBF,G,kBCDlCG,IAAMC,SAASC,iBAAkB,EAEjC,IAKMC,EAAc,CAChBC,oCANW,CAEXC,UAAW,CAAC,iBAKZC,IAAMC,kBAAkBP,MAGtBQ,EAAaC,kBAAe,WAAf,EAAmBN,GAGhCO,EAAQC,sBAAYd,EAAae,8BAAoBJ,IAG3DK,+BAAqBH,GACNA,QClBfI,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,OAEFM,SAASC,eAAe,STqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ecd4aa85.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export function setLinkData(data) {\n    return {\n        type: \"SET_LINK_DATA\",\n        payload: data\n    }\n}\n\nexport function setCurrentPlayingSong(data) {\n    return {\n        type: \"SET_CURRENT_SONG\",\n        payload: data\n    }\n}\n\nexport function setSongIndex(data) {\n    return{\n        type: \"SET_SONG_INDEX\",\n        payload: data\n    }\n}\n\nexport const alterLinks = links => dispatch => {\n    dispatch(setLinkData(links));\n};\n\nexport const appendLink = (link,linkData,songIndex) => dispatch => {\n    let tempData = linkData;\n    let tempIndex = songIndex + 1;\n    if (tempData.length === 0) {\n        dispatch(setCurrentPlayingSong(link));\n    }\n    tempData.push({ title: \"Link \" + tempIndex, key: link });\n    dispatch(setLinkData(tempData));\n    dispatch(setSongIndex(tempIndex));\n};\n\nexport const removeFromList = (linkData,deleteKey) => dispatch => {\n    let tempData = linkData;\n    \n    tempData = tempData.filter(eachObject => eachObject.key !== deleteKey);\n    dispatch(setLinkData(tempData));\n};\n\nexport const playThisSong = playKey => dispatch => {\n    dispatch(setCurrentPlayingSong(playKey));\n};","import React from \"react\";\nimport YouTube from \"react-youtube\";\nimport { connect } from \"react-redux\";\nimport { playThisSong, removeFromList } from \"../../../actions/PlaySongsActions\";\n\nclass YoutubeComponent extends React.Component {\n  render() {\n    const opts = {\n      height: \"390\",\n      width: \"640\",\n      playerVars: {\n        // https://developers.google.com/youtube/player_parameters\n        autoplay: 1\n      }\n    };\n\n    return (\n      <YouTube\n        videoId={this.props.currentPlayingId}\n        opts={opts}\n        onReady={this._onReady}\n        onEnd={this._onEnd}\n      />\n    );\n  }\n\n  _onEnd = () => {\n    let currentIndex = 0;\n    let currentPlayingId = this.props.currentPlayingId;\n    for (let i = 0; i < this.props.linkData.length; i++) {\n      if (this.props.linkData[i].key === this.props.currentPlayingId) {\n        currentIndex = i;\n        break;\n      }\n    }\n    if (currentIndex === this.props.linkData.length - 1) {\n      this.props.playThisSong(this.props.linkData[0].key);\n    } else {\n      this.props.playThisSong(this.props.linkData[currentIndex + 1].key);\n    }\n    this.props.removeFromList([...this.props.linkData],currentPlayingId);\n  };\n\n  _onReady(event) {\n    // access to player in all event handlers via event.target\n    event.target.pauseVideo();\n  }\n}\n\nconst mapStateToProps = statef => {\n  return {\n    currentPlayingId: statef.songsData.currentPlayingId,\n    linkData: statef.songsData.linkData\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    playThisSong: (playKey) => dispatch(playThisSong(playKey)),\n    removeFromList: (linkData,deleteKey) => dispatch(removeFromList(linkData,deleteKey))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YoutubeComponent);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Tree, Icon } from \"antd\";\n\nimport \"./playlistLinks.css\";\nimport {\n  removeFromList,\n  playThisSong,\n  alterLinks\n} from \"../../../actions/PlaySongsActions\";\n\nconst { TreeNode } = Tree;\n\nclass PlaylistLinks extends React.Component {\n  removeFromPlayList = (event,removingKey) => {\n    event.stopPropagation()\n      if(this.props.currentPlayingId !== removingKey){\n        this.props.removeFromList([...this.props.linkData],removingKey)\n      }else{\n        let currentIndex = 0;\n        let currentPlayingId = this.props.currentPlayingId;\n        for (let i = 0; i < this.props.linkData.length; i++) {\n          if (this.props.linkData[i].key === this.props.currentPlayingId) {\n            currentIndex = i;\n            break;\n          }\n        }\n        if (currentIndex === this.props.linkData.length - 1) {\n          this.props.playThisSong(this.props.linkData[0].key);\n        } else {\n          this.props.playThisSong(this.props.linkData[currentIndex + 1].key);\n        }\n        this.props.removeFromList([...this.props.linkData],currentPlayingId);\n      }\n  };\n\n  onDrop = info => {\n    const dropKey = info.node.props.eventKey;\n    const dragKey = info.dragNode.props.eventKey;\n    const dropPos = info.node.props.pos.split(\"-\");\n    const dropPosition =\n      info.dropPosition - Number(dropPos[dropPos.length - 1]);\n\n    const loop = (data, key, callback) => {\n      data.forEach((item, index, arr) => {\n        if (item.key === key) {\n          return callback(item, index, arr);\n        }\n        if (item.children) {\n          return loop(item.children, key, callback);\n        }\n      });\n    };\n    const data = [...this.props.linkData];\n\n    // Find dragObject\n    let dragObj;\n    loop(data, dragKey, (item, index, arr) => {\n      arr.splice(index, 1);\n      dragObj = item;\n    });\n\n    if (\n      (info.node.props.children || []).length > 0 && // Has children\n      info.node.props.expanded && // Is expanded\n      dropPosition === 1 // On the bottom gap\n    ) {\n      loop(data, dropKey, item => {\n        item.children = item.children || [];\n        // where to insert 示例添加到尾部，可以是随意位置\n        item.children.unshift(dragObj);\n      });\n    } else {\n      let ar;\n      let i;\n      loop(data, dropKey, (item, index, arr) => {\n        ar = arr;\n        i = index;\n      });\n      if (dropPosition === -1) {\n        ar.splice(i, 0, dragObj);\n      } else {\n        ar.splice(i + 1, 0, dragObj);\n      }\n    }\n\n    this.props.alterLinks(data);\n  };\n\n  render() {\n    const loop = data =>\n      data.map(item => {\n        return (\n          <TreeNode\n            key={item.key}\n            title={\n              <p\n                onClick={() => this.props.playThisSong(item.key)}\n                style={{ width: \"300px\" }}\n              >\n                {item.title}\n                <span style={{ float: \"right\" }}>\n                  <Icon\n                    type=\"close-circle\"\n                    onClick={(event) => this.removeFromPlayList(event,item.key)}\n                  />\n                </span>\n              </p>\n            }\n          />\n        );\n      });\n    return (\n      <div>\n        <Tree\n          className=\"draggable-tree\"\n          draggable\n          blockNode\n          onDragEnter={this.onDragEnter}\n          onDrop={this.onDrop}\n        >\n          {loop(this.props.linkData)}\n        </Tree>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = statef => {\n  return {\n    linkData: statef.songsData.linkData,\n    currentPlayingId: statef.songsData.currentPlayingId\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  playThisSong: playKey => dispatch(playThisSong(playKey)),\n  removeFromList: (linkData, deleteKey) =>\n    dispatch(removeFromList(linkData, deleteKey)),\n  alterLinks: links => dispatch(alterLinks(links))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaylistLinks);\n","import React from \"react\";\nimport { Form, Button, Input } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { appendLink } from \"../../../actions/PlaySongsActions\";\n\nclass AddLinkForm extends React.Component {\n  state = {\n    help: \"\",\n    validateStatus: \"\",\n    inputText: \"\"\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        let youtubeId = this.youtube_parser(values.youtubeLink);\n        if (youtubeId) {\n          if (this.props.linkData && this.props.linkData.length > 0) {\n            let filteredData = this.props.linkData.filter(\n              eachObj => eachObj.key === youtubeId\n            );\n            if (filteredData && filteredData.length > 0) {\n              this.setState({\n                help: \"This link already been added!\",\n                validateStatus: \"error\"\n              });\n            } else {\n              this.props.appendLink(youtubeId, [...this.props.linkData], this.props.songIndex);\n              this.setState({\n                validateStatus: \"success\"\n              });\n              setTimeout(() => {\n                this.props.form.resetFields();\n              }, 3000);\n            }\n          } else {\n            this.props.appendLink(youtubeId, [...this.props.linkData], this.props.songIndex);\n            this.setState({\n              validateStatus: \"success\"\n            });\n            setTimeout(() => {\n              this.props.form.resetFields();\n            }, 3000);\n          }\n        } else {\n          this.setState({\n            help: \"Not a valid Link!\",\n            validateStatus: \"error\"\n          });\n        }\n        console.log(this.youtube_parser(values.youtubeLink));\n      } else {\n        this.setState({\n          help: \"Please paste your youtube link!\",\n          validateStatus: \"error\"\n        });\n      }\n      setTimeout(() => {\n        this.resetValidations();\n      }, 3000);\n    });\n  };\n\n  resetValidations = () => {\n    this.setState({\n      help: \"\",\n      validateStatus: \"\"\n    });\n  };\n\n  youtube_parser = url => {\n    var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\n    var match = url.match(regExp);\n    return match && match[7].length === 11 ? match[7] : false;\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <Form onSubmit={this.handleSubmit} hideRequiredMark={true}>\n          <Form.Item\n            label=\"Add Youtube-link\"\n            validateStatus={this.state.validateStatus}\n            hasFeedback\n            help={this.state.help}\n            colon={false}\n          >\n            {getFieldDecorator(\"youtubeLink\", {\n              rules: [{ required: true, message: \"\" }]\n            })(\n              <Input\n                placeholder=\"Please paste your youtube link here\"\n                onChange={() => this.resetValidations()}\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Add\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst AddLinkComponent = Form.create({ name: \"register\" })(AddLinkForm);\n\nconst mapStateToProps = statef => {\n    return {\n      songIndex: statef.songsData.songIndex,\n      linkData: statef.songsData.linkData\n    };\n  };\n  \n  const mapDispatchToProps = dispatch => ({\n    appendLink: (link, linkData, songIndex) => dispatch(appendLink(link, linkData, songIndex)),\n  });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddLinkComponent);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport YoutubeComponent from \"./YoutubeComponent/YoutubeComponent\";\nimport PlaylistLinks from \"./PlaylistLinks/PlaylistLinks\";\n\nimport \"./playSongs.css\";\nimport AddLinkComponent from \"./AddLinkComponent/AddLinkComponent\";\n\nclass PlaySongs extends React.Component {\n  render() {\n    return (\n      <div>\n        <AddLinkComponent />\n        <div className=\"outerDiv\">\n          {this.props.linkData.length > 0 ? <YoutubeComponent /> : \"\"}\n          <PlaylistLinks />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = statef => {\n  return {\n    linkData: statef.songsData.linkData\n  };\n};\n\nexport default connect(mapStateToProps, null)(PlaySongs);\n","const defaultState = {\n    linkData: [],\n    currentPlayingId: \"\",\n    songIndex: 0\n};\n  \n  const PlaySongsReducer = function(state = defaultState, action) {\n    const { type, payload } = action;\n  \n    const updateState = update => {\n      return Object.assign({}, state, update);\n    };\n  \n    const resetState = () => {\n      return Object.assign({}, state, defaultState);\n    };\n    switch (type) {\n      case \"SET_LINK_DATA\":\n        return updateState({ linkData: payload });\n      case \"SET_CURRENT_SONG\":\n        return updateState({ currentPlayingId: payload });\n      case \"SET_SONG_INDEX\":\n        return updateState({ songIndex: payload });\n      case \"RESET_DATA\":\n        return resetState();\n      default:\n        return state;\n    }\n  };\n  export default PlaySongsReducer;\n  ","import { combineReducers } from \"redux\";\nimport { withReduxStateSync } from 'redux-state-sync'\nimport PlaySongsReducer from \"./PlaySongsReducer.js\";\n\nconst rootReducer = combineReducers({\n  songsData: PlaySongsReducer\n});\n\nexport default withReduxStateSync(rootReducer)\n","import { applyMiddleware, createStore } from \"redux\";\nimport { createStateSyncMiddleware, initStateWithPrevTab } from 'redux-state-sync';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers/rootReducer';\nimport axios from 'axios';\n\naxios.defaults.withCredentials = true;\n\nconst config = {\n    // TOGGLE_TODO will not be triggered in other tabs\n    blacklist: ['TOGGLE_TODO'],\n  }\n\nconst middlewares = [\n    createStateSyncMiddleware(config),\n    thunk.withExtraArgument(axios)\n  ];\n\nconst middleware = applyMiddleware(...middlewares);\n\n\nconst store = createStore(rootReducer, composeWithDevTools(middleware));\n\n// init state with other tabs\ninitStateWithPrevTab(store)\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"antd/dist/antd.css\";\nimport PlaySongs from \"./Components/PlaySongs/PlaySongs\";\nimport store from \"./stores/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PlaySongs />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}